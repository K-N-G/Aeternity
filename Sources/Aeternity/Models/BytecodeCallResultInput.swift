//
// BytecodeCallResultInput.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BytecodeCallResultInput: Codable, Hashable {

    public enum Backend: String, Codable, CaseIterable {
        case fate = "fate"
        case aevm = "aevm"
    }
    /** Prefixed (cb_) Base64Check encoded byte array */
    public var bytecode: String
    /** Name of the called function */
    public var function: String
    /** Call result type (ok | revert | error) */
    public var callResult: String
    /** Call result value (ABI encoded data or error string) */
    public var callValue: String
    /** Compiler backend; fate | aevm */
    public var backend: Backend?

    public init(bytecode: String, function: String, callResult: String, callValue: String, backend: Backend? = nil) {
        self.bytecode = bytecode
        self.function = function
        self.callResult = callResult
        self.callValue = callValue
        self.backend = backend
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bytecode
        case function
        case callResult = "call-result"
        case callValue = "call-value"
        case backend
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(bytecode, forKey: .bytecode)
        try container.encode(function, forKey: .function)
        try container.encode(callResult, forKey: .callResult)
        try container.encode(callValue, forKey: .callValue)
        try container.encodeIfPresent(backend, forKey: .backend)
    }
}

