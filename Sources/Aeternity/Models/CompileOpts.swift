//
// CompileOpts.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CompileOpts: Codable, Hashable {

    public enum Backend: String, Codable, CaseIterable {
        case fate = "fate"
        case aevm = "aevm"
    }
    /** Compiler backend; fate | aevm */
    public var backend: Backend?
    /** An explicit file system, mapping file names to file content */
    public var fileSystem: AnyCodable?
    /** Name of contract source file - only used in error messages */
    public var srcFile: String?

    public init(backend: Backend? = nil, fileSystem: AnyCodable? = nil, srcFile: String? = nil) {
        self.backend = backend
        self.fileSystem = fileSystem
        self.srcFile = srcFile
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case backend
        case fileSystem = "file_system"
        case srcFile = "src_file"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(backend, forKey: .backend)
        try container.encodeIfPresent(fileSystem, forKey: .fileSystem)
        try container.encodeIfPresent(srcFile, forKey: .srcFile)
    }
}

