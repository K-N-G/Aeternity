//
// DryRunInput.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DryRunInput: Codable, Hashable {

    /** Base58Check encoded tagged hash */
    public var top: String?
    /** Accounts */
    public var accounts: [DryRunAccount]?
    /** Txs */
    public var txs: [DryRunInputItem]
    /** Collect and return on-chain tx events that would result from the call */
    public var txEvents: Bool? = false

    public init(top: String? = nil, accounts: [DryRunAccount]? = nil, txs: [DryRunInputItem], txEvents: Bool? = false) {
        self.top = top
        self.accounts = accounts
        self.txs = txs
        self.txEvents = txEvents
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case top
        case accounts
        case txs
        case txEvents = "tx_events"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(top, forKey: .top)
        try container.encodeIfPresent(accounts, forKey: .accounts)
        try container.encode(txs, forKey: .txs)
        try container.encodeIfPresent(txEvents, forKey: .txEvents)
    }
}

