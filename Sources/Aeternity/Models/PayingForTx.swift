//
// PayingForTx.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PayingForTx: Codable, Hashable {

    /** Base58Check encoded tagged pubkey */
    public var payerId: String
    public var fee: ModelUInt
    public var nonce: ModelUInt64?
    public var tx: SignedTx

    public init(payerId: String, fee: ModelUInt, nonce: ModelUInt64? = nil, tx: SignedTx) {
        self.payerId = payerId
        self.fee = fee
        self.nonce = nonce
        self.tx = tx
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case payerId = "payer_id"
        case fee
        case nonce
        case tx
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(payerId, forKey: .payerId)
        try container.encode(fee, forKey: .fee)
        try container.encodeIfPresent(nonce, forKey: .nonce)
        try container.encode(tx, forKey: .tx)
    }
}

