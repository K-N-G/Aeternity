//
// DecodeCalldataSource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DecodeCalldataSource: Codable, Hashable {

    /** (Possibly partial) Sophia contract code */
    public var source: String
    public var options: CompileOpts?
    /** Prefixed (cb_) Base64Check encoded byte array */
    public var calldata: String
    /** Name of the function to call */
    public var function: String

    public init(source: String, options: CompileOpts? = nil, calldata: String, function: String) {
        self.source = source
        self.options = options
        self.calldata = calldata
        self.function = function
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case source
        case options
        case calldata
        case function
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(source, forKey: .source)
        try container.encodeIfPresent(options, forKey: .options)
        try container.encode(calldata, forKey: .calldata)
        try container.encode(function, forKey: .function)
    }
}

