//
// OffChainCallContractAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OffChainCallContractAllOf: Codable, Hashable {

    /** Base58Check encoded tagged pubkey */
    public var caller: String
    /** Base58Check encoded tagged pubkey */
    public var contract: String
    public var abiVersion: ModelUInt16
    public var amount: ModelUInt
    public var gas: ModelUInt64
    public var gasPrice: ModelUInt
    /** Base64Check encoded tagged byte array */
    public var callData: String

    public init(caller: String, contract: String, abiVersion: ModelUInt16, amount: ModelUInt, gas: ModelUInt64, gasPrice: ModelUInt, callData: String) {
        self.caller = caller
        self.contract = contract
        self.abiVersion = abiVersion
        self.amount = amount
        self.gas = gas
        self.gasPrice = gasPrice
        self.callData = callData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case caller
        case contract
        case abiVersion = "abi_version"
        case amount
        case gas
        case gasPrice = "gas_price"
        case callData = "call_data"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(caller, forKey: .caller)
        try container.encode(contract, forKey: .contract)
        try container.encode(abiVersion, forKey: .abiVersion)
        try container.encode(amount, forKey: .amount)
        try container.encode(gas, forKey: .gas)
        try container.encode(gasPrice, forKey: .gasPrice)
        try container.encode(callData, forKey: .callData)
    }
}

