//
// SignedTx.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SignedTx: Codable, Hashable {

    public var tx: Tx
    public var blockHeight: Int?
    /** Base58Check encoded tagged hash */
    public var blockHash: String?
    /** Base58Check encoded tagged hash */
    public var hash: String?
    /** At least one signature is required unless for Generalized Account Meta transactions */
    public var signatures: [String]?

    public init(tx: Tx, blockHeight: Int? = nil, blockHash: String? = nil, hash: String? = nil, signatures: [String]? = nil) {
        self.tx = tx
        self.blockHeight = blockHeight
        self.blockHash = blockHash
        self.hash = hash
        self.signatures = signatures
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case tx
        case blockHeight = "block_height"
        case blockHash = "block_hash"
        case hash
        case signatures
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(tx, forKey: .tx)
        try container.encodeIfPresent(blockHeight, forKey: .blockHeight)
        try container.encodeIfPresent(blockHash, forKey: .blockHash)
        try container.encodeIfPresent(hash, forKey: .hash)
        try container.encodeIfPresent(signatures, forKey: .signatures)
    }
}

