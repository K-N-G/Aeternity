//
// DryRunResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DryRunResult: Codable, Hashable {

    public var type: String
    public var result: String
    public var reason: String?
    public var callObj: ContractCallObject?

    public init(type: String, result: String, reason: String? = nil, callObj: ContractCallObject? = nil) {
        self.type = type
        self.result = result
        self.reason = reason
        self.callObj = callObj
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case result
        case reason
        case callObj = "call_obj"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(result, forKey: .result)
        try container.encodeIfPresent(reason, forKey: .reason)
        try container.encodeIfPresent(callObj, forKey: .callObj)
    }
}

