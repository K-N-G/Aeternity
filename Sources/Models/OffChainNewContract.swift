//
// OffChainNewContract.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OffChainNewContract: Codable, Hashable {

    public var op: String
    /** Base58Check encoded tagged pubkey */
    public var owner: String
    public var vmVersion: ModelUInt16
    public var abiVersion: ModelUInt16
    public var code: ByteCode
    public var deposit: ModelUInt
    /** Base64Check encoded tagged byte array */
    public var callData: String

    public init(op: String, owner: String, vmVersion: ModelUInt16, abiVersion: ModelUInt16, code: ByteCode, deposit: ModelUInt, callData: String) {
        self.op = op
        self.owner = owner
        self.vmVersion = vmVersion
        self.abiVersion = abiVersion
        self.code = code
        self.deposit = deposit
        self.callData = callData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case op
        case owner
        case vmVersion = "vm_version"
        case abiVersion = "abi_version"
        case code
        case deposit
        case callData = "call_data"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(op, forKey: .op)
        try container.encode(owner, forKey: .owner)
        try container.encode(vmVersion, forKey: .vmVersion)
        try container.encode(abiVersion, forKey: .abiVersion)
        try container.encode(code, forKey: .code)
        try container.encode(deposit, forKey: .deposit)
        try container.encode(callData, forKey: .callData)
    }
}

