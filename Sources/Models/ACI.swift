//
// ACI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ACI: Codable, Hashable {

    public var encodedAci: AnyCodable
    public var externalEncodedAci: [AnyCodable]?
    public var interface: String

    public init(encodedAci: AnyCodable, externalEncodedAci: [AnyCodable]? = nil, interface: String) {
        self.encodedAci = encodedAci
        self.externalEncodedAci = externalEncodedAci
        self.interface = interface
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case encodedAci = "encoded_aci"
        case externalEncodedAci = "external_encoded_aci"
        case interface
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(encodedAci, forKey: .encodedAci)
        try container.encodeIfPresent(externalEncodedAci, forKey: .externalEncodedAci)
        try container.encode(interface, forKey: .interface)
    }
}

