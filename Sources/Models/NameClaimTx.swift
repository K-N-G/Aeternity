//
// NameClaimTx.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NameClaimTx: Codable, Hashable {

    public var name: String
    public var nameSalt: ModelUInt
    public var nameFee: ModelUInt?
    public var fee: ModelUInt
    public var ttl: ModelUInt64?
    /** Base58Check encoded tagged pubkey */
    public var accountId: String
    public var nonce: ModelUInt64?

    public init(name: String, nameSalt: ModelUInt, nameFee: ModelUInt? = nil, fee: ModelUInt, ttl: ModelUInt64? = nil, accountId: String, nonce: ModelUInt64? = nil) {
        self.name = name
        self.nameSalt = nameSalt
        self.nameFee = nameFee
        self.fee = fee
        self.ttl = ttl
        self.accountId = accountId
        self.nonce = nonce
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case nameSalt = "name_salt"
        case nameFee = "name_fee"
        case fee
        case ttl
        case accountId = "account_id"
        case nonce
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(nameSalt, forKey: .nameSalt)
        try container.encodeIfPresent(nameFee, forKey: .nameFee)
        try container.encode(fee, forKey: .fee)
        try container.encodeIfPresent(ttl, forKey: .ttl)
        try container.encode(accountId, forKey: .accountId)
        try container.encodeIfPresent(nonce, forKey: .nonce)
    }
}

