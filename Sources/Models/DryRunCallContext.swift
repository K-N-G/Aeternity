//
// DryRunCallContext.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DryRunCallContext: Codable, Hashable {

    /** Base64Check encoded tagged byte array */
    public var tx: String?
    /** Base58Check encoded tagged hash */
    public var txHash: String?
    /** This call will have effects on the next call in this dry-run (or not) */
    public var stateful: Bool?

    public init(tx: String? = nil, txHash: String? = nil, stateful: Bool? = nil) {
        self.tx = tx
        self.txHash = txHash
        self.stateful = stateful
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case tx
        case txHash = "tx_hash"
        case stateful
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(tx, forKey: .tx)
        try container.encodeIfPresent(txHash, forKey: .txHash)
        try container.encodeIfPresent(stateful, forKey: .stateful)
    }
}

